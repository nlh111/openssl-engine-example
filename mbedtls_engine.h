#ifndef __MBEDTLS_ENGINE_H__
#define __MBEDTLS_ENGINE_H__
#include <mbedtls/ctr_drbg.h>
#include <mbedtls/ecdsa.h>
#include <mbedtls/entropy.h>
#include <mbedtls/pk.h>
#include <openssl/evp.h>
#include <string>
#include <openssl/engine.h>

class MbedtlsEcdsaCtx
{
  public:
    mbedtls_pk_context priv_key;
    mbedtls_pk_context pub_key;
    mbedtls_entropy_context entropy;
    mbedtls_ctr_drbg_context ctr_drbg;
    MbedtlsEcdsaCtx()
    {
        mbedtls_pk_init(&priv_key);
        mbedtls_pk_init(&pub_key);
        mbedtls_entropy_init(&entropy);
        mbedtls_ctr_drbg_init(&ctr_drbg);
    }
    ~MbedtlsEcdsaCtx()
    {
        mbedtls_pk_free(&priv_key);
        mbedtls_pk_free(&pub_key);
        mbedtls_entropy_free(&entropy);
        mbedtls_ctr_drbg_free(&ctr_drbg);
    }
};

class OpensslEcdsaEngine
{
  public:
    ENGINE *engine = nullptr;
    EC_KEY_METHOD *ec_key_method = nullptr;
    static MbedtlsEcdsaCtx ctx;
    OpensslEcdsaEngine();
    ~OpensslEcdsaEngine();
    static int ecdsa_sign(int type, const unsigned char *dgst, int dlen, unsigned char *sig, unsigned int *siglen,
               const BIGNUM *kinv, const BIGNUM *r, EC_KEY *eckey);
    static int ecdsa_verify(int type, const unsigned char *dgst, int dgst_len, const unsigned char *sigbuf, int sig_len,
                 EC_KEY *eckey);

};

const unsigned char ecdsa_privkey[] = {
    0x30, 0x74, 0x02, 0x01, 0x01, 0x04, 0x20, 0x5c, 0xb3, 0x55, 0x48, 0x1b, 0x6e, 0xfe, 0x9e, 0xb1, 0x65,
    0xbf, 0xa2, 0x75, 0x73, 0x31, 0x4f, 0x76, 0x9e, 0x65, 0xf7, 0xe7, 0x00, 0xab, 0xdb, 0x38, 0x8f, 0x67,
    0x7b, 0x58, 0xee, 0x92, 0xb3, 0xa0, 0x07, 0x06, 0x05, 0x2b, 0x81, 0x04, 0x00, 0x0a, 0xa1, 0x44, 0x03,
    0x42, 0x00, 0x04, 0xe4, 0x81, 0x64, 0x27, 0x2f, 0x6c, 0x2e, 0xba, 0xed, 0xcb, 0x39, 0xf2, 0x63, 0xd4,
    0x3d, 0x3a, 0x0e, 0x78, 0xfc, 0x9f, 0x31, 0xf7, 0x6a, 0xb4, 0x87, 0x76, 0x7d, 0x1e, 0xf3, 0x05, 0x3d,
    0xd8, 0x12, 0x95, 0xc7, 0x22, 0x86, 0x27, 0x08, 0x5b, 0xec, 0xd7, 0xa7, 0xa8, 0x44, 0x0f, 0x95, 0xd2,
    0x7a, 0x3d, 0xb1, 0x6c, 0x26, 0xc1, 0x5f, 0x37, 0x0e, 0xc3, 0x0e, 0xe1, 0xcc, 0x1f, 0x24, 0x5b};
const unsigned char ecdsa_pubkey[] = {
    0x30, 0x56, 0x30, 0x10, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x05, 0x2b, 0x81, 0x04,
    0x00, 0x0a, 0x03, 0x42, 0x00, 0x04, 0xe4, 0x81, 0x64, 0x27, 0x2f, 0x6c, 0x2e, 0xba, 0xed, 0xcb, 0x39, 0xf2,
    0x63, 0xd4, 0x3d, 0x3a, 0x0e, 0x78, 0xfc, 0x9f, 0x31, 0xf7, 0x6a, 0xb4, 0x87, 0x76, 0x7d, 0x1e, 0xf3, 0x05,
    0x3d, 0xd8, 0x12, 0x95, 0xc7, 0x22, 0x86, 0x27, 0x08, 0x5b, 0xec, 0xd7, 0xa7, 0xa8, 0x44, 0x0f, 0x95, 0xd2,
    0x7a, 0x3d, 0xb1, 0x6c, 0x26, 0xc1, 0x5f, 0x37, 0x0e, 0xc3, 0x0e, 0xe1, 0xcc, 0x1f, 0x24, 0x5b};

#endif